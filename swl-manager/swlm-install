#!/bin/bash
###################################################################
#
# swl-install
#
# Install lfs-base and swl-base packages
#
###################################################################

source $SWL_API_PATH/swl-api-functions


###################################################################
# USAGE
###################################################################
function usage
{
	cat << EOF

INSTALL USAGE:

ROOT=/install/root swl-manager install (options) <version>

OPTIONS:
	-c	configure installation (passwd, fstab)
	-l	lfs-base only
	-r	rebase
	-v	display mirror available versions

EOF
}


####################################################################
# CONFIGURATION
####################################################################

#------------------------------------------------------------------#
# Parse command line
#------------------------------------------------------------------#

if [[ -z $1 ]]; then usage; exit; fi

version=0
swlbase=true
configure=false
rebase=false

case $1 in

	-c) 	configure=true ;;
	-l)	if [[ -z $2 ]]; then usage; exit; fi
		version=$2
		swlbase=false
		;;
	-r)	rebase=true ;;
	-v) 	;;
	*) 	version=$1 ;;
esac


#------------------------------------------------------------------#
# CONFIGURE ONLY
#------------------------------------------------------------------#

if [[ $configure == true ]]; then install_configure; exit 0; fi


#------------------------------------------------------------------#
# REBASE
#------------------------------------------------------------------#

if [[ $rebase == true ]]; then install_rebase; exit 0; fi



#------------------------------------------------------------------#
# GET MIRROR VERSIONS
#------------------------------------------------------------------#

mirror_versions=$(mirror_get_versions)

if [[ $version == 0 ]]; then

	echo
	echo "Versions available on mirror $SWL_MIRROR:"
	echo

	for each in $mirror_versions
	do
		echo $each
	done

	exit
fi

### Verify mirror ###
if [[ ! "$mirror_versions" =~ (^|[ ])$version([ ]|$) ]]; then
	echo ""
	echo "ERROR: Version $version not found on mirror $SWL_MIRROR"
	echo ""
	echo "Available versions: $mirror_versions"
	exit
fi

####################################################################
# RUN PARTITIONER
####################################################################

echo
read -p "Run partitioner? (Yes): " confirm
if [[ $confirm == "Yes" ]]; then install_run_partitioner; fi


#------------------------------------------------------------------#
# Summary output and user verification
#------------------------------------------------------------------#

# Install root
install_root="/"
if [[ ! -z $ROOT ]]; then install_root=$ROOT; fi

echo ""
echo "Installation Summary:"
echo ""
echo "VERSION: $version"
echo "INSTALL ROOT: $install_root"
echo "SWL BASE: $swlbase"
echo ""
echo "WARNING! Data on $install_root will be permanently modified and could render the system unusable!"
echo ""
read -p "Is this configuration acceptable? (Yes): " confirm 
if [[ $confirm != "Yes" ]]; then echo "Cancelling..."; exit 1; fi


####################################################################
# INSTALL BASE PACKAGES
####################################################################

### INSTALL LFS BASE ###
install_lfsbase $version


### INSTALL SWL BASE
if [[ $swlbase == true ]]; then install_swlbase $version; fi


####################################################################
# INITIALIZE INSTALLATION
####################################################################

# passwd and fstab
install_configure


### Initialize swl ###
if [[ $swlbase == true ]]; then

	# Install swl
	echo
        echo "Installing swl..."
        echo
        [[ ! -d $ROOT/$SWL_INSTALL_PATH ]] && git clone https://github.com/wiigelec/slackwiig-lfs $ROOT/$SWL_INSTALL_PATH
        echo

	# Create links
	[[ ! -e $SWL_SBIN_PATH/swl-manager ]] && ln -sv /usr/src/slackwiig-lfs/swl-manager/swl-manager $SWL_SBIN_PATH
	[[ ! -e $SWL_SBIN_PATH/swlm-config ]] && ln -sv /usr/src/slackwiig-lfs/swl-manager/swlm-config $SWL_SBIN_PATH

	# Initiallize polkit
	echo
        echo "Initializing polkit..."
        echo
        chroot $ROOT $SWL_POLKIT_INIT

	# Write version file
	echo $version > $SWL_VERSION_FILE
fi

####################################################################
# INSTALL BOOTLOADER
####################################################################

echo
read -p "Install bootloader? (Yes): " confirm
if [[ $confirm == "Yes" ]]; then install_bootloader; fi


####################################################################
# CLEANUP
####################################################################

### Remove temp dir ###
rm -rf $tmpdir


echo ""
echo "Base system installation complete."
