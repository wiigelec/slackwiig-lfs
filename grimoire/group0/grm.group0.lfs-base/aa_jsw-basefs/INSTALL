# For the conversion script
PACKAGE=aa_jsw-basefs-1.0.tar

#----------------------------------------------------------#
# 4.2. Creating a Limited Directory Layout in the LFS Filesystem

mkdir -pv $INSTALL_ROOT/{etc,var} $INSTALL_ROOT/usr/{bin,lib,sbin}

for i in bin lib sbin; do
  ln -sv usr/$i $INSTALL_ROOT/$i
done

mkdir -pv $INSTALL_ROOT/lib64


#----------------------------------------------------------#
# 5.5. Glibc-2.38

ln -sfv ../lib/ld-linux-x86-64.so.2 $INSTALL_ROOT/lib64
ln -sfv ../lib/ld-linux-x86-64.so.2 $INSTALL_ROOT/lib64/ld-lsb-x86-64.so.3


#----------------------------------------------------------#
# 6.18. GCC-13.2.0 - Pass 2

ln -sv gcc $INSTALL_ROOT/usr/bin/cc


#----------------------------------------------------------#
# 6.4. Bash-5.2.15

ln -sv bash $INSTALL_ROOT/bin/sh


#----------------------------------------------------------#
# 7.3. Preparing Virtual Kernel File Systems

mkdir -pv $INSTALL_ROOT/{dev,proc,sys,run}


#----------------------------------------------------------#
# 7.5. Creating Directories 

mkdir -pv $INSTALL_ROOT/{boot,home,mnt,opt,srv}
mkdir -pv $INSTALL_ROOT/etc/{opt,sysconfig}
mkdir -pv $INSTALL_ROOT/lib/firmware
mkdir -pv $INSTALL_ROOT/media/{floppy,cdrom}
mkdir -pv $INSTALL_ROOT/usr/{,local/}{include,src}
mkdir -pv $INSTALL_ROOT/usr/local/{bin,lib,sbin}
mkdir -pv $INSTALL_ROOT/usr/{,local/}share/{color,dict,doc,info,locale,man}
mkdir -pv $INSTALL_ROOT/usr/{,local/}share/{misc,terminfo,zoneinfo}
mkdir -pv $INSTALL_ROOT/usr/{,local/}share/man/man{1..8}
mkdir -pv $INSTALL_ROOT/var/{cache,local,log,mail,opt,spool}
mkdir -pv $INSTALL_ROOT/var/lib/{color,misc,locate}

ln -sfv /run $INSTALL_ROOT/var/run
ln -sfv /run/lock $INSTALL_ROOT/var/lock

install -dv -m 0750 $INSTALL_ROOT/root
install -dv -m 1777 $INSTALL_ROOT/tmp $INSTALL_ROOT/var/tmp


#----------------------------------------------------------#
# 7.6. Creating Essential Files and Symlinks 

ln -sv /proc/self/mounts $INSTALL_ROOT/etc/mtab

cat > $INSTALL_ROOT/etc/hosts << EOF
127.0.0.1  localhost slackwiig-lfs
::1        localhost
EOF

cat > $INSTALL_ROOT/etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/usr/bin/false
daemon:x:6:6:Daemon User:/dev/null:/usr/bin/false
messagebus:x:18:18:D-Bus Message Daemon User:/run/dbus:/usr/bin/false
systemd-journal-gateway:x:73:73:systemd Journal Gateway:/:/usr/bin/false
systemd-journal-remote:x:74:74:systemd Journal Remote:/:/usr/bin/false
systemd-journal-upload:x:75:75:systemd Journal Upload:/:/usr/bin/false
systemd-network:x:76:76:systemd Network Management:/:/usr/bin/false
systemd-resolve:x:77:77:systemd Resolver:/:/usr/bin/false
systemd-timesync:x:78:78:systemd Time Synchronization:/:/usr/bin/false
systemd-coredump:x:79:79:systemd Core Dumper:/:/usr/bin/false
uuidd:x:80:80:UUID Generation Daemon User:/dev/null:/usr/bin/false
systemd-oom:x:81:81:systemd Out Of Memory Daemon:/:/usr/bin/false
nobody:x:65534:65534:Unprivileged User:/dev/null:/usr/bin/false
EOF

cat > $INSTALL_ROOT/etc/group << "EOF"
root:x:0:
bin:x:1:daemon
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
floppy:x:7:
disk:x:8:
lp:x:9:
dialout:x:10:
audio:x:11:
video:x:12:
utmp:x:13:
usb:x:14:
cdrom:x:15:
adm:x:16:
messagebus:x:18:
systemd-journal:x:23:
input:x:24:
mail:x:34:
kvm:x:61:
systemd-journal-gateway:x:73:
systemd-journal-remote:x:74:
systemd-journal-upload:x:75:
systemd-network:x:76:
systemd-resolve:x:77:
systemd-timesync:x:78:
systemd-coredump:x:79:
uuidd:x:80:
systemd-oom:x:81:
wheel:x:97:
users:x:999:
nogroup:x:65534:
EOF

touch $INSTALL_ROOT/var/log/{btmp,lastlog,faillog,wtmp}
chgrp -v utmp $INSTALL_ROOT/var/log/lastlog
chmod -v 664  $INSTALL_ROOT/var/log/lastlog
chmod -v 600  $INSTALL_ROOT/var/log/btmp


#----------------------------------------------------------#
# 9.2. General Network Configuration

mkdir -pv $INSTALL_ROOT/etc/systemd/network/
cat > $INSTALL_ROOT/etc/systemd/network/10-eth-static.network << "EOF"
[Match]
Name=<network-device-name>

[Network]
Address=192.168.0.2/24
Gateway=192.168.0.1
DNS=192.168.0.1
Domains=<Your Domain Name>
EOF

cat > $INSTALL_ROOT/etc/systemd/network/10-eth-dhcp.network << "EOF"
[Match]
Name=<network-device-name>

[Network]
DHCP=ipv4

[DHCPv4]
UseDomains=true
EOF

echo "slackwiig-lfs" > $INSTALL_ROOT/etc/hostname

cat > $INSTALL_ROOT/etc/hosts << "EOF"
# Begin /etc/hosts

127.0.0.1 localhost.localdomain localhost
127.0.1.1 <FQDN> <HOSTNAME>
<192.168.0.2> <FQDN> <HOSTNAME> [alias1] [alias2] ...
::1       localhost ip6-localhost ip6-loopback
ff02::1   ip6-allnodes
ff02::2   ip6-allrouters

# End /etc/hosts
EOF


#----------------------------------------------------------#
# 9.5. Configuring the system clock

cat > $INSTALL_ROOT/etc/adjtime << "EOF"
0.0 0 0.0
0
LOCAL
EOF


#----------------------------------------------------------#
# 9.6. Configuring the Linux Console 

cat > $INSTALL_ROOT/etc/vconsole.conf << "EOF"
KEYMAP=us
FONT=lat0-16
EOF


#----------------------------------------------------------#
# 9.7. Configuring the System Locale

cat > $INSTALL_ROOT/etc/locale.conf << "EOF"
LANG=en_US.UTF-8
EOF


#----------------------------------------------------------#
# 9.8. Creating the /etc/inputrc File 

cat > $INSTALL_ROOT/etc/inputrc << "EOF"
# Begin /etc/inputrc
# Modified by Chris Lynn <roryo@roryo.dynup.net>

# Allow the command prompt to wrap to the next line
set horizontal-scroll-mode Off

# Enable 8-bit input
set meta-flag On
set input-meta On

# Turns off 8th bit stripping
set convert-meta Off

# Keep the 8th bit for display
set output-meta On

# none, visible or audible
set bell-style none

# All of the following map the escape sequence of the value
# contained in the 1st argument to the readline specific functions
"\eOd": backward-word
"\eOc": forward-word

# for linux console
"\e[1~": beginning-of-line
"\e[4~": end-of-line
"\e[5~": beginning-of-history
"\e[6~": end-of-history
"\e[3~": delete-char
"\e[2~": quoted-insert

# for xterm
"\eOH": beginning-of-line
"\eOF": end-of-line

# for Konsole
"\e[H": beginning-of-line
"\e[F": end-of-line

# End /etc/inputrc
EOF


#----------------------------------------------------------#
# 9.9. Creating the /etc/shells File 

cat > $INSTALL_ROOT/etc/shells << "EOF"
# Begin /etc/shells

/bin/sh
/bin/bash

# End /etc/shells
EOF


#----------------------------------------------------------#
# 10.2. Creating the /etc/fstab File

cat > $INSTALL_ROOT/etc/fstab << "EOF"
# Begin /etc/fstab

# file system  mount-point  type     options             dump  fsck
#                                                              order

#/dev/sda2     /            ext4     defaults            1     1
#/dev/sda1     swap         swap     pri=1               0     0

# End /etc/fstab
EOF


#----------------------------------------------------------#
# 11.1. The End 

echo 12.0-systemd > $INSTALL_ROOT/etc/lfs-release

cat > $INSTALL_ROOT/etc/lsb-release << "EOF"
DISTRIB_ID="Slackwiig-LFS"
DISTRIB_RELEASE="12.0-systemd"
DISTRIB_CODENAME="wiigelec"
DISTRIB_DESCRIPTION="Custom LFS Based Distribution"
EOF

cat > $INSTALL_ROOT/etc/os-release << "EOF"
NAME="Slackwiig-LFS"
VERSION="12.0-systemd"
ID=lfs
PRETTY_NAME="Slackwiig-LFS"
VERSION_CODENAME="wiigelec"
EOF
